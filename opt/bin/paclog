#!/usr/bin/env bash
# Output the comments for the last commits of a package (specified as the script's argument)
# Optionally, only display the first NUM commits, with -l NUM.

# Define usage.
usage() {
  cat >&2 <<EOF
Usage: $0 [-l NUM] PACKAGE_NAME | -h
  -l NUM      optionally, only display NUM latest entries
  -h          display this help text and exit
EOF
  exit 1
}

# Parse options.
while getopts 'l:h' opt; do
  case "${opt}" in
    l) length=$OPTARG ;;
    *) usage ;;
  esac
done

# Check -l argument. If $length is empty, then equivalent to flag never being specified. Zero is okay (NOP), negative is not.
if ! [[ $length =~ ^[0-9]*$ ]]; then
  echo 'ERROR: wrong argument supplied to -l'
  exit 1
fi

shift $((OPTIND-1))

# Check primary argument(s)
if [[ $# != 1 ]]; then
  echo 'ERROR: specify a single package as argument'
  exit 1
fi

# Determine which repository package is from, and build url
repo=$(pacman -Ss ^${1}$ | sed 's|/.*||;q')

case $repo in
core|extra|testing)
	pre_url='https://projects.archlinux.org/svntogit/packages.git/log/trunk?h=packages/'
	;;
community|multilib)
	pre_url='https://projects.archlinux.org/svntogit/community.git/log/trunk?h=packages/'
	;;
'') # AUR or package not found
	pre_url='https://aur.archlinux.org/cgit/aur.git/log/?h='
	;;
*)
	echo "ERROR: Unknown repository returned (\"${repo}\")" >&2
	exit 1
	;;
esac

post_url='&showmsg=1'

# Parse commit log
output=$(w3m -dump "${pre_url}${1}${post_url}" | sed -n '/Commit message/,/^\s*$/p')

# Check for presence of log
if [ -z "$output" ]; then
	echo "ERROR: no log found for ${1}"
	exit 1
fi

# Truncate if necessary
if [ -z $length ]; then
  echo "$output"
else
  <<<"$output" gawk -v l=$length 'BEGIN {nth=0}; /^\s/ {print; next} {if (nth == l){exit} else {print}; nth++}'
fi