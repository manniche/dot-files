set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)
Plugin 'tmhedberg/SimpylFold'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'airblade/vim-gitgutter'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'viis/vim-bclose'
Plugin 'jmcantrell/vim-virtualenv'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" split management 
set splitbelow
set splitright

" use , as the leader
let mapleader = ","

noremap <Tab> <C-W>w
noremap <Bar> <C-W>v<C-W><Right>
noremap - <C-W>s<C-W><Down>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
nnoremap ; :
nnoremap : ;
nnoremap <silent> <Leader>x :Bclose<CR>


" folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

" python folding shows docstrings
let g:SimpylFold_docstring_preview=1

" use UTF-8
set encoding=utf-8

" tabs
set shiftwidth=4
set softtabstop=4
set expandtab
set autoindent

set number

" NerdTree
nnoremap <silent> <Leader>n :NERDTreeToggle<CR>

" syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_python_checkers = ['python3 -m flake8.run']

" Python 
au BufNewFile,BufRead *.py:
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=120
    \ set expandtab
    \ set autoindent
    \ set fileformat=unix

let python_highlight_all=1
syntax on

"python virtualenv support
python3 << EOF
import os
import sys
#if 'VIRTUAL_ENV' in os.environ:
#  project_base_dir = os.environ['VIRTUAL_ENV']
#  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
#  exec(compile(open(activate_this, 'rb').read(), activate_this, 'exec'))
#EOF
